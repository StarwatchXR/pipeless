name: Publish Dockerfile image

on:
  release:
    types:
      - created
  workflow_dispatch:
    branches:
      - main
    inputs:
      tag_override:
        description: "Override the image tag. Useful to release revisions of the container when the Pipeless code has not changed"
        type: string
      cuda_tag_override:
        description: "Override the CUDA image tag. Useful to release revisions of the container when the Pipeless code has not changed"
        type: string
      tensorrt_tag_override:
        description: "Override the TensorRT image tag. Useful to release revisions of the container when the Pipeless code has not changed"
        type: string

jobs:
  push_to_registry:
    name: Push Dockerfile image to Dockerfile Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Dockerfile Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Dockerfile Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Dockerfile
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: miguelaeh/pipeless

      - name: Build and push Dockerfile image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:package"
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ inputs.tag_override != '' && inputs.tag_override || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_cuda_to_registry:
    name: Push CUDA Dockerfile image to Dockerfile Hub
    runs-on: ubuntu-latest
    steps:
      # Avoids the runner to run out of space by removing unnecesary dependencies
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 30000
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'

      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Dockerfile Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Dockerfile Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Dockerfile
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: miguelaeh/pipeless
          flavor: |
            suffix=-cuda,onlatest=true

      - name: Build and push Dockerfile image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:package"
          file: ./Dockerfile-cuda
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ inputs.cuda_tag_override != '' && inputs.cuda_tag_override || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_tensorrt_to_registry:
    name: Push TensorRT Dockerfile image to Dockerfile Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Dockerfile Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Dockerfile Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Dockerfile
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: miguelaeh/pipeless
          flavor: |
            suffix=-tensorrt,onlatest=true

      - name: Build and push Dockerfile image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:package"
          file: ./Dockerfile-tensorrt
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ inputs.tensorrt_tag_override != '' && inputs.tensorrt_tag_override || steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
