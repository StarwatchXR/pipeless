## @section Global parameters
## Global Dockerfile image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Dockerfile image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Dockerfile image registry
## @param global.imagePullSecrets Global Dockerfile registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Pipeless proxy Parameters
##

## Pipeless input
##
input:
  ## Pipeless input image
  ## ref: https://hub.docker.com/r/miguelaeh/pipeless/tags/
  ## @param input.image.registry input image registry
  ## @param input.image.repository input image repository
  ## @param input.image.tag input image tag (immutable tags are recommended)
  ## @param input.image.digest input image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param input.image.pullPolicy input image pull policy
  ## @param input.image.pullSecrets input image pull secrets
  ## @param input.image.debug Enable input image debug mode
  ##
  image:
    registry: docker.io
    repository: miguelaeh/pipeless
    tag: latest
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param input.replicaCount Number of input replicas to deploy
  ##
  replicaCount: 1
  ## @param input.containerPorts.http input HTTP container port
  ## @param input.containerPorts.https input HTTPS container port
  ##
  containerPorts:
    worker: 1234
    # The ready port must be 2 ports over the above port
    worker_ready: 1236

  ## Configure extra options for input containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param input.livenessProbe.enabled Enable livenessProbe on input containers
  ## @param input.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param input.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param input.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param input.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param input.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param input.readinessProbe.enabled Enable readinessProbe on input containers
  ## @param input.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param input.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param input.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param input.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param input.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param input.startupProbe.enabled Enable startupProbe on input containers
  ## @param input.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param input.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param input.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param input.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param input.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param input.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param input.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param input.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## input resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param input.resources.limits The resources limits for the input containers
  ## @param input.resources.requests The requested resources for the input containers
  ##
  resources:
    limits: {}
    requests:
      memory: "2Gi"
      cpu: "1000m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param input.podSecurityContext.enabled Enabled input pods' Security Context
  ## @param input.podSecurityContext.fsGroup Set input pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param input.containerSecurityContext.enabled Enabled input containers' Security Context
  ## @param input.containerSecurityContext.runAsUser Set input containers' Security Context runAsUser
  ## @param input.containerSecurityContext.runAsNonRoot Set input containers' Security Context runAsNonRoot
  ## @param input.containerSecurityContext.readOnlyRootFilesystem Set input containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false

  ## @param input.log_level Worker log level
  log_level: INFO

  ## Configure Pipeless input
  ## @param input.video.enable Enable input video
  ## @param input.video.uri Pipeless innput remote URI to read. Leave empty to use RTMP server
  ##
  video:
    enable: true
    uri: ""

  ## input service parameters
  ##
  service:
    ## @param input.service.type input service type
    ##
    type: ClusterIP
    ## @param input.service.ports.worker input service worker port
    ##
    ports:
      worker: 1234
      # Worker ready port is the above plus 2 on the code
      worker_ready: 1236
    ## Node ports to expose
    ## @param input.service.nodePorts.http Node port for HTTP
    ## @param input.service.nodePorts.https Node port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      worker: ""
    ## @param input.service.clusterIP input service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param input.service.loadBalancerIP input service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param input.service.loadBalancerSourceRanges input service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param input.service.externalTrafficPolicy input service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param input.service.annotations Additional custom annotations for input service
    ##
    annotations: {}
    ## @param input.service.extraPorts Extra ports to expose in input service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param input.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/user-guide/services/
    ##
    sessionAffinity: None
    ## @param input.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

  ## @param input.existingConfigmap The name of an existing ConfigMap with your custom configuration for input
  ##
  existingConfigmap:
  ## @param input.command Override default container command (useful when using custom images)
  ##
  command: ["pipeless", "run", "input"]
  ## @param input.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param input.hostAliases input pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param input.podLabels Extra labels for input pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param input.podAnnotations Annotations for input pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param input.podAffinityPreset Pod affinity preset. Ignored if `input.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param input.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `input.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param input.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param input.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param input.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  ## Node input.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param input.nodeAffinityPreset.type Node affinity preset type. Ignored if `input.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param input.nodeAffinityPreset.key Node label key to match. Ignored if `input.affinity` is set
    ##
    key: ""
    ## @param input.nodeAffinityPreset.values Node label values to match. Ignored if `input.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param input.affinity Affinity for input pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `input.podAffinityPreset`, `input.podAntiAffinityPreset`, and `input.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param input.nodeSelector Node labels for input pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param input.tolerations Tolerations for input pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param input.updateStrategy.type input statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param input.priorityClassName input pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param input.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param input.schedulerName Name of the k8s scheduler (other than default) for input pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param input.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param input.lifecycleHooks for the input container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param input.extraEnvVars Array with extra environment variables to add to input nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param input.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for input nodes
  ##
  extraEnvVarsCM: ""
  ## @param input.extraEnvVarsSecret Name of existing Secret containing extra env vars for input nodes
  ##
  extraEnvVarsSecret: ""
  ## @param input.extraVolumes Optionally specify extra list of additional volumes for the input pod(s)
  ##
  extraVolumes: []
  ## @param input.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the input container(s)
  ##
  extraVolumeMounts: []
  ## @param input.sidecars Add additional sidecar containers to the input pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param input.initContainers Add additional init containers to the input pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

## Pipeless output
##
output:
  ## Pipeless output image
  ## ref: https://hub.docker.com/r/miguelaeh/pipeless/tags/
  ## @param output.image.registry output image registry
  ## @param output.image.repository output image repository
  ## @param output.image.tag output image tag (immutable tags are recommended)
  ## @param output.image.digest output image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param output.image.pullPolicy output image pull policy
  ## @param output.image.pullSecrets output image pull secrets
  ## @param output.image.debug Enable output image debug mode
  ##
  image:
    registry: docker.io
    repository: miguelaeh/pipeless
    tag: latest
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param output.replicaCount Number of output replicas to deploy
  ##
  replicaCount: 1
  ## @param output.containerPorts.http output HTTP container port
  ## @param output.containerPorts.https output HTTPS container port
  ##
  containerPorts:
    worker: 1237
    # The input output port is the above +1
    input: 1238
  ## Configure extra options for output containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param output.livenessProbe.enabled Enable livenessProbe on output containers
  ## @param output.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param output.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param output.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param output.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param output.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param output.readinessProbe.enabled Enable readinessProbe on output containers
  ## @param output.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param output.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param output.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param output.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param output.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param output.startupProbe.enabled Enable startupProbe on output containers
  ## @param output.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param output.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param output.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param output.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param output.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param output.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param output.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param output.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## output resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param output.resources.limits The resources limits for the output containers
  ## @param output.resources.requests The requested resources for the output containers
  ##
  resources:
    limits: {}
    requests:
      memory: "2Gi"
      cpu: "1000m"
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param output.podSecurityContext.enabled Enabled output pods' Security Context
  ## @param output.podSecurityContext.fsGroup Set output pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param output.containerSecurityContext.enabled Enabled output containers' Security Context
  ## @param output.containerSecurityContext.runAsUser Set output containers' Security Context runAsUser
  ## @param output.containerSecurityContext.runAsNonRoot Set output containers' Security Context runAsNonRoot
  ## @param output.containerSecurityContext.readOnlyRootFilesystem Set output containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false


  ## @param output.log_level Output log level
  log_level: INFO

  ## Configure Pipeless output
  ## @param output.video.enable Enable output video
  ## @param output.video.uri Pipeless output remote URI to read. Leave empty to use RTMP server
  ##
  video:
    enable: true
    uri: ""

  ## @param output.recev_buffer_size Specify the output recv buffer
  recv_buffer_size: 600

  ## output service parameters
  ##
  service:
    ## @param output,service.type output service type
    ##
    type: ClusterIP
    ## @param output.service.ports.http worker service worker port
    ##
    ports:
      worker: 1237
      # The input-output port is the above + 1
      input: 1238
    ## Node ports to expose
    ## @param output.service.nodePorts.http Node port for HTTP
    ## @param output.service.nodePorts.https Node port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      worker: ""
      input: ""
    ## @param output.service.clusterIP output service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param output.service.loadBalancerIP output service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param output.service.loadBalancerSourceRanges output service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param output.service.externalTrafficPolicy output service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param output.service.annotations Additional custom annotations for output service
    ##
    annotations: {}
    ## @param output.service.extraPorts Extra ports to expose in output service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param output.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/user-guide/services/
    ##
    sessionAffinity: None
    ## @param output.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

  ## @param output.existingConfigmap The name of an existing ConfigMap with your custom configuration for output
  ##
  existingConfigmap:
  ## @param output.command Override default container command (useful when using custom images)
  ##
  command: ["pipeless", "run", "output"]
  ## @param output.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param output.hostAliases output pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param output.podLabels Extra labels for output pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param output.podAnnotations Annotations for output pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param output.podAffinityPreset Pod affinity preset. Ignored if `output.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param output.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `output.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param output.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param output.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param output.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""

  ## Node output.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param output.nodeAffinityPreset.type Node affinity preset type. Ignored if `output.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param output.nodeAffinityPreset.key Node label key to match. Ignored if `output.affinity` is set
    ##
    key: ""
    ## @param output.nodeAffinityPreset.values Node label values to match. Ignored if `output.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param output.affinity Affinity for output pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `output.podAffinityPreset`, `output.podAntiAffinityPreset`, and `output.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param output.nodeSelector Node labels for output pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param output.tolerations Tolerations for output pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param output.updateStrategy.type output statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param output.priorityClassName output pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param output.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param output.schedulerName Name of the k8s scheduler (other than default) for output pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param output.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param output.lifecycleHooks for the output container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param output.extraEnvVars Array with extra environment variables to add to output nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param output.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for output nodes
  ##
  extraEnvVarsCM: ""
  ## @param output.extraEnvVarsSecret Name of existing Secret containing extra env vars for output nodes
  ##
  extraEnvVarsSecret: ""
  ## @param output.extraVolumes Optionally specify extra list of additional volumes for the output pod(s)
  ##
  extraVolumes: []
  ## @param output.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the output container(s)
  ##
  extraVolumeMounts: []
  ## @param output.sidecars Add additional sidecar containers to the output pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param output.initContainers Add additional init containers to the output pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

## Pipeless worker
##
worker:
  ## Bitnami worker image
  ## ref: https://hub.docker.com/r/miguelaeh/pipeless/tags/
  ## @param worker.image.registry worker image registry
  ## @param worker.image.repository worker image repository
  ## @param worker.image.tag worker image tag (immutable tags are recommended)
  ## @param worker.image.digest worker image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param worker.image.pullPolicy worker image pull policy
  ## @param worker.image.pullSecrets worker image pull secrets
  ## @param worker.image.debug Enable worker image debug mode
  ##
  image:
    registry: docker.io
    repository: miguelaeh/pipeless
    tag: latest
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param worker.replicaCount Number of worker replicas to deploy
  ##
  replicaCount: 1

  ## Configure extra options for worker containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param worker.livenessProbe.enabled Enable livenessProbe on worker containers
  ## @param worker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param worker.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param worker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param worker.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param worker.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param worker.readinessProbe.enabled Enable readinessProbe on worker containers
  ## @param worker.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param worker.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param worker.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param worker.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param worker.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param worker.startupProbe.enabled Enable startupProbe on worker containers
  ## @param worker.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param worker.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param worker.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param worker.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param worker.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param worker.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param worker.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param worker.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## worker resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param worker.resources.limits The resources limits for the worker containers
  ## @param worker.resources.requests The requested resources for the worker containers
  ##
  resources:
    limits: {}
    requests:
      memory: "2Gi"
      cpu: "1000m"
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param worker.autoscaling.enabled Enable autoscaling for output
  ## @param worker.autoscaling.minReplicas Minimum number of output replicas
  ## @param worker.autoscaling.maxReplicas Maximum number of output replicas
  ## @param worker.autoscaling.targetCPU Target CPU utilization percentage
  ## @param worker.autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: ""
    maxReplicas: ""
    targetCPU: ""
    targetMemory: ""
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param worker.podSecurityContext.enabled Enabled worker pods' Security Context
  ## @param worker.podSecurityContext.fsGroup Set worker pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param worker.containerSecurityContext.enabled Enabled worker containers' Security Context
  ## @param worker.containerSecurityContext.runAsUser Set worker containers' Security Context runAsUser
  ## @param worker.containerSecurityContext.runAsNonRoot Set worker containers' Security Context runAsNonRoot
  ## @param worker.containerSecurityContext.readOnlyRootFilesystem Set worker containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false

  ## @param worker.log_level Worker log level
  log_level: INFO
  ## @param worker.recv_buffer_size Size of the worker reception buffer
  recv_buffer_size: 600
  ## @param worker.show_exec_time Show the execution time of the user hooks.
  show_exec_time: false
  ## @param worker.enable_profiler Show user code execution time line by line
  enable_profiler: false
  ## @param worker.inference.model_uri Load a model from the URI into the built-in ONNX runtime
  ## @param worker.inference.pre_process_model_uri Load a pre-process model from the URI into the ONNX Runtime
  ## @param worker.inference.force_opset_version Force the operation set version of the model to automatically migrate it
  ## @param worker.inference.force_ir_version Force the intermediate representation version to migrate the model automatically
  ## @param worker.inference.image_shape_format Specify the image shape format of the model input
  ## @param worker.inference.image_width Force the model input image width
  ## @param worker.inference.image_height Force the model input image hieght
  ## @param worker.inference.image_channels Force the model input image channels
  inference:
    model_uri: ""
    pre_process_model_uri: ""
    force_opset_version: null
    force_ir_version: null
    image_shape_format: ""
    image_width: ""
    image_height: ""
    image_channels: ""

  # @param worker.extra_python.packages Install extra packages required by the application automatcaiily
  user_python_packages: ""

  # @param worker.plugins.dir Directory to load plugins from. Relative to the app directory
  # @param worker.plugins.order Execution order of the plugins. PLugins specified here will be automatically installed.
  plugins:
    dir: ""
    order: ""

  # @param worker.application.git_repo Git repo URL to download the Pipeless application
  # @param worker.application.subPath Sub-path of the application within the git repository
  application:
    git_repo: ""
    subPath: ""
  ## @param worker.existingConfigmap The name of an existing ConfigMap with your custom configuration for worker
  ##
  existingConfigmap:
  ## @param worker.command Override default container command (useful when using custom images)
  ##
  command: ["pipeless", "run", "worker"]
  ## @param worker.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param worker.hostAliases worker pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param worker.podLabels Extra labels for worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param worker.podAnnotations Annotations for worker pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param worker.podAffinityPreset Pod affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param worker.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param worker.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param worker.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param worker.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""

  ## Node worker.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param worker.nodeAffinityPreset.type Node affinity preset type. Ignored if `worker.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param worker.nodeAffinityPreset.key Node label key to match. Ignored if `worker.affinity` is set
    ##
    key: ""
    ## @param worker.nodeAffinityPreset.values Node label values to match. Ignored if `worker.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param worker.affinity Affinity for worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `worker.podAffinityPreset`, `worker.podAntiAffinityPreset`, and `worker.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param worker.nodeSelector Node labels for worker pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param worker.tolerations Tolerations for worker pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param worker.updateStrategy.type worker statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param worker.priorityClassName worker pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param worker.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param worker.schedulerName Name of the k8s scheduler (other than default) for worker pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param worker.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param worker.lifecycleHooks for the worker container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param worker.extraEnvVars Array with extra environment variables to add to worker nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param worker.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for worker nodes
  ##
  extraEnvVarsCM: ""
  ## @param worker.extraEnvVarsSecret Name of existing Secret containing extra env vars for worker nodes
  ##
  extraEnvVarsSecret: ""
  ## @param worker.extraVolumes Optionally specify extra list of additional volumes for the worker pod(s)
  ##
  extraVolumes: []
  ## @param worker.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the worker container(s)
  ##
  extraVolumeMounts: []
  ## @param worker.sidecars Add additional sidecar containers to the worker pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param worker.initContainers Add additional init containers to the worker pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param worker.persistence.enabled Enable persistence using Persistent Volume Claims
    ##
    enabled: true
    ## @param worker.persistence.mountPath Path to mount the volume at.
    ##
    mountPath: /app
    ## @param worker.persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
    ##
    subPath: ""
    ## @param persistence.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param worker.persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param worker.persistence.accessModes Persistent Volume Access Modes
    ##
    accessModes:
      - ReadWriteOnce
    ## @param worker.persistence.size Size of data volume
    ##
    size: 200Mi
    ## @param worker.persistence.existingClaim The name of an existing PVC to use for persistence
    ##
    existingClaim: ""
    ## @param worker.persistence.selector Selector to match an existing Persistent Volume for WordPress data PVC
    ## If set, the PVC can't have a PV dynamically provisioned for it
    ## E.g.
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}
    ## @param worker.persistence.dataSource Custom PVC data source
    ##
    dataSource: {}

## @section Init Container Parameters
##

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the *podSecurityContext/*containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false
  ## OS Shell + Utility image
  ## ref: https://hub.docker.com/r/bitnami/os-shell/tags/
  ## @param volumePermissions.image.registry OS Shell + Utility image registry
  ## @param volumePermissions.image.repository OS Shell + Utility image repository
  ## @param volumePermissions.image.tag OS Shell + Utility image tag (immutable tags are recommended)
  ## @param volumePermissions.image.pullPolicy OS Shell + Utility image pull policy
  ## @param volumePermissions.image.pullSecrets OS Shell + Utility image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 11-debian
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## Init container's resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param volumePermissions.resources.limits The resources limits for the init container
  ## @param volumePermissions.resources.requests The requested resources for the init container
  ##
  resources:
    limits: {}
    requests: {}
  ## Init container Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param volumePermissions.containerSecurityContext.runAsUser Set init container's Security Context runAsUser
  ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
  ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
  ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
  ##
  containerSecurityContext:
    runAsUser: 0

## @section Other Parameters
##

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## @section RTMP proxy Parameters
##

## Video proxy
##
proxy:
  ## Video proxy image
  ## ref: https://hub.docker.com/r/miguelaeh/pipeless/tags/
  ## @param proxy.image.registry proxy image registry
  ## @param proxy.image.repository proxy image repository
  ## @param proxy.image.tag proxy image tag (immutable tags are recommended)
  ## @param proxy.image.digest proxy image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param proxy.image.pullPolicy proxy image pull policy
  ## @param proxy.image.pullSecrets proxy image pull secrets
  ## @param proxy.image.debug Enable proxy image debug mode
  ##
  image:
    registry: docker.io
    repository: miguelaeh/rtmp
    tag: latest
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false
  ## @param proxy.replicaCount Number of proxy replicas to deploy
  ##
  replicaCount: 1
  ## @param proxy.containerPorts.http proxy HTTP container port
  ## @param proxy.containerPorts.https proxy HTTPS container port
  ##
  containerPorts:
    video: 1935

  ## Configure extra options for proxy containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param proxy.livenessProbe.enabled Enable livenessProbe on proxy containers
  ## @param proxy.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param proxy.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param proxy.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param proxy.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param proxy.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param proxy.readinessProbe.enabled Enable readinessProbe on proxy containers
  ## @param proxy.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param proxy.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param proxy.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param proxy.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param proxy.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param proxy.startupProbe.enabled Enable startupProbe on proxy containers
  ## @param proxy.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param proxy.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param proxy.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param proxy.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param proxy.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 10
    failureThreshold: 10
    successThreshold: 10
  ## @param proxy.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param proxy.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param proxy.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## proxy resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## @param proxy.resources.limits The resources limits for the proxy containers
  ## @param proxy.resources.requests The requested resources for the proxy containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param proxy.podSecurityContext.enabled Enabled proxy pods' Security Context
  ## @param proxy.podSecurityContext.fsGroup Set proxy pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param proxy.containerSecurityContext.enabled Enabled proxy containers' Security Context
  ## @param proxy.containerSecurityContext.runAsUser Set proxy containers' Security Context runAsUser
  ## @param proxy.containerSecurityContext.runAsNonRoot Set proxy containers' Security Context runAsNonRoot
  ## @param proxy.containerSecurityContext.readOnlyRootFilesystem Set proxy containers' Security Context runAsNonRoot
  ##
  containerSecurityContext:
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: false

  ## proxy service parameters
  ##
  service:
    ## @param proxy.service.type proxy service type
    ##
    type: LoadBalancer
    ## @param proxy.service.ports.video proxy service video port
    ##
    ports:
      video: 1935
    ## Node ports to expose
    ## @param proxy.service.nodePorts.http Node port for HTTP
    ## @param proxy.service.nodePorts.https Node port for HTTPS
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      video: ""
    ## @param proxy.service.clusterIP proxy service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param proxy.service.loadBalancerIP proxy service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param proxy.service.loadBalancerSourceRanges proxy service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param proxy.service.externalTrafficPolicy proxy service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param proxy.service.annotations Additional custom annotations for proxy service
    ##
    annotations: {}
    ## @param proxy.service.extraPorts Extra ports to expose in proxy service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param proxy.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/user-guide/services/
    ##
    sessionAffinity: None
    ## @param proxy.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

  ## @param proxy.existingConfigmap The name of an existing ConfigMap with your custom configuration for proxy
  ##
  existingConfigmap:
  ## @param proxy.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param proxy.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param proxy.hostAliases proxy pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param proxy.podLabels Extra labels for proxy pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param proxy.podAnnotations Annotations for proxy pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param proxy.podAffinityPreset Pod affinity preset. Ignored if `proxy.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param proxy.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `proxy.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param proxy.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param proxy.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param proxy.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable
  ##
  pdb:
    create: false
    minAvailable: 1
    maxUnavailable: ""
  ## Node proxy.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param proxy.nodeAffinityPreset.type Node affinity preset type. Ignored if `proxy.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param proxy.nodeAffinityPreset.key Node label key to match. Ignored if `proxy.affinity` is set
    ##
    key: ""
    ## @param proxy.nodeAffinityPreset.values Node label values to match. Ignored if `proxy.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param proxy.affinity Affinity for proxy pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `proxy.podAffinityPreset`, `proxy.podAntiAffinityPreset`, and `proxy.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param proxy.nodeSelector Node labels for proxy pods assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param proxy.tolerations Tolerations for proxy pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param proxy.updateStrategy.type proxy statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param proxy.priorityClassName proxy pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param proxy.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param proxy.schedulerName Name of the k8s scheduler (other than default) for proxy pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param proxy.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param proxy.lifecycleHooks for the proxy container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param proxy.extraEnvVars Array with extra environment variables to add to proxy nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param proxy.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for proxy nodes
  ##
  extraEnvVarsCM: ""
  ## @param proxy.extraEnvVarsSecret Name of existing Secret containing extra env vars for proxy nodes
  ##
  extraEnvVarsSecret: ""
  ## @param proxy.extraVolumes Optionally specify extra list of additional volumes for the proxy pod(s)
  ##
  extraVolumes: []
  ## @param proxy.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the proxy container(s)
  ##
  extraVolumeMounts: []
  ## @param proxy.sidecars Add additional sidecar containers to the proxy pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param proxy.initContainers Add additional init containers to the proxy pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []
